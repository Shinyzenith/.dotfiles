alias cat='bat'
alias cd..='cd ..'
alias cleanup='doas pacman -Rns $(pacman -Qtdq); paru -c' #Cleanup orphaned packages
alias clear='tput reset'
alias cp='cpg -gi'
alias cpu="ps axch -o cmd:15,%cpu --sort=-%cpu | head"
alias df='duf'
alias decrypt="gpg --no-symkey-cache"
alias e='exit'
alias encrypt="gpg -c --no-symkey-cache --cipher-algo AES256"
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias g='gotop'
alias gpgexportprivkey="gpg --export-secret-keys --armor"
alias gpgimportkey="gpg --import"
alias gpglistkeys="gpg --list-keys --keyid-format LONG"
alias grep='grep --color=auto'
alias grub-mkconfig="doas grub-mkconfig -o /boot/grub/grub.cfg"
alias killp='killprocess'
alias kp='killprocess'
alias l='exa -lahF --color=always --icons --sort=size --group-directories-first'
alias less='bat'
alias listfonts='fc-list'
alias ls='exa -lhF --color=always --icons --sort=size --group-directories-first'
alias lst='exa -lahFT --color=always --icons --sort=size --group-directories-first'
alias m='mocp'
alias mem="ps axch -o cmd:15,%mem --sort=-%mem | head"
alias mirror="doas reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist-arch;rankmirrors /etc/pacman.d/mirrorlist| doas tee /etc/pacman.d/mirrorlist" 
alias mirrora="doas reflector --latest 30 --number 10 --sort age --save /etc/pacman.d/mirrorlist-arch;rankmirrors /etc/pacman.d/mirrorlist| doas tee /etc/pacman.d/mirrorlist"
alias mirrord="doas reflector --latest 30 --number 10 --sort delay --save /etc/pacman.d/mirrorlist-arch;rankmirrors /etc/pacman.d/mirrorlist| doas tee /etc/pacman.d/mirrorlist"
alias mirrors="doas reflector --latest 30 --number 10 --sort score --save /etc/pacman.d/mirrorlist-arch;rankmirrors /etc/pacman.d/mirrorlist| doas tee /etc/pacman.d/mirrorlist"
alias mv='mvg -gi'
alias neofetch="=cat ~/.cache/neofetch-large-cache"
alias nopadding="sed -i 's/^pad\(.*\)/# pad\1/g' ~/.config/foot/foot.ini"
alias padding="sed -i 's/^# pad\(.*\)/pad\1/g' ~/.config/foot/foot.ini"
alias vim='vim -i NONE'
# find devour alternative for wayland
alias p='setsid -f pcmanfm .'
alias paste='cat "$(find . -type f | fzf)" | curl -sF "sprunge=<-" http://sprunge.us|wl-copy && wl-paste'
alias pdw="pwd"
alias aurupdates='paru -Qua'
alias aurcomments='paru -Gc'
alias pkgbuild='paru -Gp'
alias q='exit'
alias sudoedit='doasedit'
alias rg="rg --sort path --no-ignore --hidden" #search content with ripgrep
alias rip="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -200 | nl" #Recent Installed Packages
alias riplong="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -3000 | nl"
alias rm='rm -i'
alias randomwallpaper='~/.config/river/wallpaper.sh >/dev/null 2>&1'
alias update='paru -Syyu --devel;paru -c'
alias udpate='update'
alias upate='update'
alias updqte='update'
alias updte='update'
alias update-grub="doas grub-mkconfig -o /boot/grub/grub.cfg"
alias updatefonts='doas fc-cache -fv'
alias upload='curl -sF"file=@$(find $HOME -type f | fzf)" 0x0.st |wl-copy && notify-send "0x0.st" "File Uploaded\!"'
alias wget="wget -c" # continue the download
alias webcam='setsid -f mpv --profile=low-latency --no-cache --untimed $(/bin/ls /dev/video* | fzf)'
alias yt="yt --detach"

# required functions

ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   tar xf $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

gitpush ()
{
	if [ -d .git ];then
		git diff
		echo "Type a commit message."
		read input
		git add .
		git commit -m "$input"
		git push
	fi
}


rangercd () {
    tmp="$(mktemp)"
    ranger --choosedir="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        if [ -d "$dir" ]; then
            if [ "$dir" != "$(pwd)" ]; then
                cd "$dir"
            fi
        fi
    fi
}

openxwaylandappasroot(){
	if ! command -v xhost >/dev/null; then
		echo "xhost is not installed"
	else
		xhost si:localuser:root
	fi
}

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
	 [[ $1 = 'block' ]]; then
	echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
	   [[ ${KEYMAP} == viins ]] ||
	   [[ ${KEYMAP} = '' ]] ||
	   [[ $1 = 'beam' ]]; then
	echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
	zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
	echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# ci"
autoload -U select-quoted
zle -N select-quoted
for m in visual viopp; do
  for c in {a,i}{\',\",\`}; do
	bindkey -M $m $c select-quoted
  done
done

# ci{, ci(, di{ etc..
autoload -U select-bracketed
zle -N select-bracketed
for m in visual viopp; do
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
	bindkey -M $m $c select-bracketed
  done
done

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char
bindkey -s '^o' 'rangercd\n'
bindkey -s '^p' 'gitpush\n'
bindkey '^R' history-incremental-search-backward
bindkey '^E' edit-command-line
bindkey -s '^l' 'clear\n'
#bindkey '^k' up-history
#bindkey '^j' down-history
bindkey -v 
