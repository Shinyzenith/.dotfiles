#!/usr/bin/env bash
set -e 

die() { printf "$*" 1>&2 ; exit 1; }

if ! command -v jq &> /dev/null; then
  die "jq is not installed\n"
fi

if [[ ! -f "${XDG_CONFIG_HOME:-$HOME/.config}/yt-api" ]];then
	die "No API key found. Please create a file named 'yt-api' in your config directory.\n"
fi

c_red="\033[1;31m"
c_green="\033[1;32m"
c_blue="\033[1;34m"
c_reset="\033[0m"
tmp_file="/tmp/yt-script"

main(){
	tput reset

	printf "${c_red}Search YouTube:${c_reset} "
	read -r query

	if [[ $query == "" ]]; then
		die "No query term specified\n"
	fi

	query="${query// /+}"
	tput reset

	YT_API_KEY="$(cat "${HOME}"/.config/yt-api)"
	urlstring="https://www.googleapis.com/youtube/v3/search?part=snippet&q=${query}&type=video&maxResults=20&key=${YT_API_KEY}"
	curl -s "${urlstring}" | jq -r '.items[] | "\(.snippet.channelTitle) --> \(.snippet.title) youtu.be/\(.id.videoId)"' > $tmp_file

	format_print $tmp_file

	printf "\n${c_red}Enter Choice:${c_reset} "
	read -r choice
	[ "$choice" -eq "$choice" ] 2>/dev/null || die "${c_red}Invalid Number Entered.${c_reset}\n"
	[[ $(wc -l ${tmp_file} | awk '{print $1}') -lt $choice  ]] || [[ $choice -lt 0 ]] || [[ $choice -eq 0 ]] && die "${c_red}Invalid choice range.${c_reset}\n"
	videourl=$(awk -v choice="$choice" '{if(NR==choice) print $0}' ${tmp_file}| awk '{print $NF}')

	setsid -f mpv "https://${videourl}" 2>/dev/null 1>&2
	tput reset

}

format_print(){
	count=1
	while IFS="" read -r line || [ -n "$line" ];do
		if [ $((count % 2)) -eq 0 ];then
			printf "${c_blue}[$count]: $line\n"
		else
			printf "${c_green}[$count]: $line${c_reset}\n"
		fi
		count=$((count+1))
	done  < $1
}

_sigterm(){
	tput reset
	die 
}

trap _sigterm SIGTERM
trap _sigterm SIGINT

while true;do main;done
